/*有两种形状的瓷砖：一种是 2 x 1 的多米诺形，另一种是形如 "L" 的托米诺形。两种形状都可以旋转。



给定整数 n ，返回可以平铺 2 x n 的面板的方法的数量。返回对 109 + 7 取模 的值。

平铺指的是每个正方形都必须有瓷砖覆盖。两个平铺不同，当且仅当面板上有四个方向上的相邻单元中的两个，使得恰好有一个平铺有一个瓷砖占据两个正方形。

 */

// 题型很新颖啊
// 考虑这么一种平铺的方式：在第 i 列前面的正方形都被瓷砖覆盖，在第 i 列后面的正方形都没有被瓷砖覆盖（i 从 1 开始计数）。那么第 i 列的正方形有四种被覆盖的情况：
//一个正方形都没有被覆盖，记为状态 0；
//只有上方的正方形被覆盖，记为状态 1；
//只有下方的正方形被覆盖，记为状态 2；
//上下两个正方形都被覆盖，记为状态 3。
public class LeetCode790 {
    static final int MOD = 1000000007;
    public static int numTilings(int n) {
        int[][] dp = new int[n + 1][4];
        dp[0][3] = 1;
        for (int i = 1; i < n; i++) {
            dp[i][0] = dp[i - 1][3];
            dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % MOD;
            dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % MOD;
            dp[i][3] = dp[i-1][0] % MOD + dp[i-1][1]% MOD + dp[i-1][2] % MOD+ dp[i-1][3]% MOD;
        }
        return dp[n][3];
    }
}
